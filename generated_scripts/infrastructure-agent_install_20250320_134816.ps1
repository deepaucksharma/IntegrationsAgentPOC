# Infrastructure Agent Installation Script for Windows
# Generated by New Relic Integration Agent

# Set error handling
$ErrorActionPreference = "Stop"
$ProgressPreference = "SilentlyContinue"

# Define logging functions
function Write-Log {
    param(
        [string]$Level,
        [string]$Message
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "[$timestamp] $Level - $Message"
}

function Write-Error {
    param([string]$Message)
    Write-Log -Level "ERROR" -Message $Message
    throw $Message
}

Write-Log -Level "INFO" -Message "Starting installation of infrastructure-agent"

# Verify prerequisites
Write-Log -Level "INFO" -Message "Verifying prerequisites..."
try {
    if (-not (Get-Command curl -ErrorAction SilentlyContinue)) {
        Write-Error "Required tool not found: curl"
    }
} catch {
    Write-Error "Error checking for required tool: curl"
}

# Create installation directory
$installDir = "C:\Program Files\New Relic\newrelic-infra"
if (-not (Test-Path $installDir)) {
    Write-Log -Level "INFO" -Message "Creating installation directory..."
    New-Item -ItemType Directory -Path $installDir -Force | Out-Null
}

# Download agent
Write-Log -Level "INFO" -Message "Downloading New Relic Infrastructure agent..."
$agentUrl = "https://download.newrelic.com/infrastructure_agent/windows/newrelic-infra.msi"
$installerPath = "$env:TEMP\newrelic-infra.msi"
try {
    Invoke-WebRequest -Uri $agentUrl -OutFile $installerPath
} catch {
    Write-Error "Failed to download agent: $_"
}

# Install agent
Write-Log -Level "INFO" -Message "Installing New Relic Infrastructure agent..."
try {
    Start-Process msiexec.exe -ArgumentList "/i $installerPath /qn" -Wait
} catch {
    Write-Error "Failed to install agent: $_"
}

# Configure agent
Write-Log -Level "INFO" -Message "Configuring agent..."
$configPath = "$installDir\newrelic-infra.yml"
$configContent = @"
license_key: test123
custom_attributes:
  host: localhost
  port: 8080
"@

try {
    $configContent | Out-File -FilePath $configPath -Encoding UTF8
} catch {
    Write-Error "Failed to create config file: $_"
}

# Start service
Write-Log -Level "INFO" -Message "Starting New Relic Infrastructure service..."
try {
    Start-Service "newrelic-infra"
} catch {
    Write-Error "Failed to start service: $_"
}

# Verify installation
Write-Log -Level "INFO" -Message "Verifying installation..."

# Check version if specified
Write-Log -Level "INFO" -Message "Checking installed version..."
try {
    $installed_version = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -like '*New Relic Infrastructure Agent*' } | Select-Object -ExpandProperty Version
    if (-not ($installed_version -like "*1.0.0*")) {
        Write-Error "Version mismatch. Expected: 1.0.0, Got: $installed_version"
    }
} catch {
    Write-Error "Failed to check version"
}

Write-Log -Level "INFO" -Message "Installation of infrastructure-agent completed successfully" 