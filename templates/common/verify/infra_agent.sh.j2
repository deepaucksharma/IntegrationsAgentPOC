#!/bin/bash
# Infrastructure Agent Verification Script
# Generated by Workflow Agent v{{ version }}

set -e

# Configuration variables
HOST="{{ host }}"
PORT="{{ port }}"
INSTALL_DIR="{{ install_dir | default('/opt/newrelic-infra') }}"
CONFIG_DIR="{{ config_dir | default('/etc/newrelic-infra') }}"

echo "Verifying New Relic Infrastructure Agent installation..."

{% if is_windows %}
# Windows verification
echo "Checking Windows service status..."
powershell -Command "& {
    # Check if service exists
    $service = Get-Service -Name 'newrelic-infra' -ErrorAction SilentlyContinue
    if (-not $service) {
        Write-Error 'New Relic Infrastructure service not found'
        exit 1
    }

    # Check service status
    if ($service.Status -ne 'Running') {
        Write-Error 'New Relic Infrastructure service is not running'
        exit 1
    }

    # Check configuration file
    $configPath = 'C:\Program Files\New Relic\newrelic-infra\newrelic-infra.yml'
    if (-not (Test-Path $configPath)) {
        Write-Error 'Configuration file not found'
        exit 1
    }

    # Test connection to New Relic
    $testResult = Test-NetConnection -ComputerName collector.newrelic.com -Port 443
    if (-not $testResult.TcpTestSucceeded) {
        Write-Error 'Cannot connect to New Relic collector'
        exit 1
    }
}"

{% else %}
# Linux verification
echo "Checking service status..."
if ! systemctl is-active --quiet newrelic-infra; then
    echo "Error: New Relic Infrastructure service is not running"
    exit 1
fi

# Check configuration file
if [ ! -f "${CONFIG_DIR}/newrelic-infra.yml" ]; then
    echo "Error: Configuration file not found"
    exit 1
fi

# Check process
if ! pgrep -f "newrelic-infra" > /dev/null; then
    echo "Error: New Relic Infrastructure process not found"
    exit 1
fi

# Check connectivity
if ! curl -s -o /dev/null https://collector.newrelic.com; then
    echo "Error: Cannot connect to New Relic collector"
    exit 1
fi
{% endif %}

# Check local endpoint
if command -v curl &> /dev/null; then
    if ! curl -s "http://${HOST}:${PORT}/status" > /dev/null; then
        echo "Error: Cannot connect to local endpoint http://${HOST}:${PORT}/status"
        exit 1
    fi
elif command -v wget &> /dev/null; then
    if ! wget -q --spider "http://${HOST}:${PORT}/status"; then
        echo "Error: Cannot connect to local endpoint http://${HOST}:${PORT}/status"
        exit 1
    fi
else
    echo "Warning: Neither curl nor wget available to test local endpoint"
fi

echo "New Relic Infrastructure Agent verification completed successfully" 