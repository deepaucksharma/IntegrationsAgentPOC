# Infrastructure Agent Verification Template
# This is the default PowerShell template for verifications

# Error handling
$ErrorActionPreference = "Stop"
trap { Write-Error $_; exit 1 }

# Output information
Write-Host "Verifying {{ target_name }}"
Write-Host "Integration type: {{ integration_type }}"
Write-Host "Host: {{ host }}"

# Set default values for parameters
$InstallDir = "{{ install_dir | default('.\InfraAgent') }}"
$ConfigPath = "{{ config_path | default('.\InfraAgent\config') }}"
$LogPath = "{{ log_path | default('.\InfraAgent\logs') }}"

# Check if directories exist
$success = $true

if (-Not (Test-Path -Path $InstallDir)) {
    Write-Host "ERROR: Installation directory does not exist: $InstallDir"
    $success = $false
}

if (-Not (Test-Path -Path $ConfigPath)) {
    Write-Host "ERROR: Configuration directory does not exist: $ConfigPath"
    $success = $false
}

if (-Not (Test-Path -Path "$ConfigPath\config.json")) {
    Write-Host "ERROR: Configuration file does not exist: $ConfigPath\config.json"
    $success = $false
}

if (-Not (Test-Path -Path $LogPath)) {
    Write-Host "ERROR: Log directory does not exist: $LogPath"
    $success = $false
}

# Check configuration file
if (Test-Path -Path "$ConfigPath\config.json") {
    try {
        $config = Get-Content -Path "$ConfigPath\config.json" -Raw | ConvertFrom-Json
        Write-Host "Configuration file contains valid JSON"
        
        # Check license key
        if (-Not $config.license_key) {
            Write-Host "ERROR: License key not found in configuration"
            $success = $false
        }
        
        # Check host
        if (-Not $config.host) {
            Write-Host "ERROR: Host not found in configuration"
            $success = $false
        }
    } 
    catch {
        Write-Host "ERROR: Unable to parse configuration file: $_"
        $success = $false
    }
}

if ($success) {
    Write-Host "Verification completed successfully"
    exit 0
} else {
    Write-Host "Verification failed"
    exit 1
}
